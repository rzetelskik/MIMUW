// 06 Functions or procedures, recurssion

// Expected output:
// learnVoidNoReturn
// 1
// 3
// 0
// 3
// 24

func main() {
    learnVoidNoReturn();
    learnVoidReturn();

    print(learnSingleArg(1), "\n");
    print(learnMultiArg(1, 2), "\n");
    print(learnMultiTypesArg(1, false), "\n");
    print(learnFuncAsArg(learnMultiArg), "\n");
    print(learnRecursion(4), "\n");
}

func learnVoidNoReturn() {
    print("learnVoidNoReturn", "\n");
}

func learnVoidReturn() {
    return;
    print("just kidding", "\n");
}

func learnSingleArg(v int) int {
    return v;
}

func learnMultiArg(v, u int) int {
    return u + v;
}

func learnMultiTypesArg(v int, u bool) int {
    if u {
        return v;
    }

    return 0;
}

func learnFuncAsArg(f func(int,int) int) int {
    return f(1,2);
}

// Calculate factorial recursively.
func learnRecursion(v int) int {
    if v == 0 || v == 1 {
        return 1;
    } else {
        return v * learnRecursion(v - 1);
    }
}
