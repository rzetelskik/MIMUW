-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Grammar/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> 'func' Ident '(' ListArg ')' Type Block   (5)
	TopDef -> 'func' Ident '(' ListArg ')' Block       (6)
	TopDef -> Decl                                     (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> ListIdent Type                              (10)
	ListIdent -> Ident                                 (11)
	ListIdent -> Ident ',' ListIdent                   (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	Block -> '{' ListStmt '}'                          (16)
	ListStmt ->                                        (17)
	ListStmt -> Stmt ListStmt                          (18)
	Stmt -> ';'                                        (19)
	Stmt -> Block                                      (20)
	Stmt -> Decl                                       (21)
	Stmt -> ListExpr '=' ListExpr ';'                  (22)
	Stmt -> 'for' Stmt Expr ';' Stmt Block             (23)
	Stmt -> 'for' Expr Block                           (24)
	Stmt -> Ident '++' ';'                             (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' Expr Block                            (29)
	Stmt -> 'if' Expr Block 'else' Block               (30)
	Stmt -> 'print' '(' ListExpr ')' ';'               (31)
	Stmt -> Expr ';'                                   (32)
	Decl -> 'var' ListIdent Type ';'                   (33)
	Decl -> 'var' ListIdent '=' ListExpr ';'           (34)
	Decl -> 'var' ListIdent Type '=' ListExpr ';'      (35)
	Type -> 'int'                                      (36)
	Type -> 'string'                                   (37)
	Type -> 'bool'                                     (38)
	Type -> 'func' '(' ListType ')' Type               (39)
	Type -> 'func' '(' ListType ')'                    (40)
	Type -> '*' Type                                   (41)
	ListType ->                                        (42)
	ListType -> Type                                   (43)
	ListType -> Type ',' ListType                      (44)
	Expr8 -> Ident '(' ListExpr ')'                    (45)
	Expr8 -> '(' Expr ')'                              (46)
	Expr7 -> 'func' '(' ListArg ')' Type Block         (47)
	Expr7 -> 'func' '(' ListArg ')' Block              (48)
	Expr7 -> Expr8                                     (49)
	Expr6 -> Expr7 '(' ListExpr ')'                    (50)
	Expr6 -> Ident                                     (51)
	Expr6 -> Integer                                   (52)
	Expr6 -> 'true'                                    (53)
	Expr6 -> 'false'                                   (54)
	Expr6 -> String                                    (55)
	Expr6 -> 'nil'                                     (56)
	Expr6 -> Expr7                                     (57)
	Expr5 -> '&' Expr6                                 (58)
	Expr5 -> '*' Expr6                                 (59)
	Expr5 -> '-' Expr6                                 (60)
	Expr5 -> '!' Expr6                                 (61)
	Expr5 -> Expr6                                     (62)
	Expr4 -> Expr4 MulOp Expr5                         (63)
	Expr4 -> Expr5                                     (64)
	Expr3 -> Expr3 AddOp Expr4                         (65)
	Expr3 -> Expr4                                     (66)
	Expr2 -> Expr2 RelOp Expr3                         (67)
	Expr2 -> Expr3                                     (68)
	Expr1 -> Expr2 '&&' Expr1                          (69)
	Expr1 -> Expr2                                     (70)
	Expr -> Expr1 '||' Expr                            (71)
	Expr -> Expr1                                      (72)
	ListExpr ->                                        (73)
	ListExpr -> Expr                                   (74)
	ListExpr -> Expr ',' ListExpr                      (75)
	AddOp -> '+'                                       (76)
	AddOp -> '-'                                       (77)
	MulOp -> '*'                                       (78)
	MulOp -> '/'                                       (79)
	MulOp -> '%'                                       (80)
	RelOp -> '<'                                       (81)
	RelOp -> '<='                                      (82)
	RelOp -> '>'                                       (83)
	RelOp -> '>='                                      (84)
	RelOp -> '=='                                      (85)
	RelOp -> '!='                                      (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'for'          { PT _ (TS _ 25) }
	'func'         { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'int'          { PT _ (TS _ 28) }
	'nil'          { PT _ (TS _ 29) }
	'print'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'var'          { PT _ (TS _ 34) }
	'{'            { PT _ (TS _ 35) }
	'||'           { PT _ (TS _ 36) }
	'}'            { PT _ (TS _ 37) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListIdent       rules 11, 12
	ListArg         rules 13, 14, 15
	Block           rule  16
	ListStmt        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	Decl            rules 33, 34, 35
	Type            rules 36, 37, 38, 39, 40, 41
	ListType        rules 42, 43, 44
	Expr8           rules 45, 46
	Expr7           rules 47, 48, 49
	Expr6           rules 50, 51, 52, 53, 54, 55, 56, 57
	Expr5           rules 58, 59, 60, 61, 62
	Expr4           rules 63, 64
	Expr3           rules 65, 66
	Expr2           rules 67, 68
	Expr1           rules 69, 70
	Expr            rules 71, 72
	ListExpr        rules 73, 74, 75
	AddOp           rules 76, 77
	MulOp           rules 78, 79, 80
	RelOp           rules 81, 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'func'         shift, and enter state 7
	'var'          shift, and enter state 8

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Decl           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'bool'         reduce using rule 1
	'func'         reduce using rule 1
	'int'          reduce using rule 1
	'string'       reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'func'         shift, and enter state 7
	'var'          shift, and enter state 8
	%eof           reduce using rule 8

	TopDef         goto state 4
	ListTopDef     goto state 12
	Decl           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Decl .                                    (rule 7)

	'func'         reduce using rule 7
	'var'          reduce using rule 7
	%eof           reduce using rule 7


State 7

	TopDef -> 'func' . Ident '(' ListArg ')' Type Block    (rule 5)
	TopDef -> 'func' . Ident '(' ListArg ')' Block      (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 8

	Decl -> 'var' . ListIdent Type ';'                  (rule 33)
	Decl -> 'var' . ListIdent '=' ListExpr ';'          (rule 34)
	Decl -> 'var' . ListIdent Type '=' ListExpr ';'     (rule 35)

	L_Ident        shift, and enter state 2

	Ident          goto state 9
	ListIdent      goto state 10

State 9

	ListIdent -> Ident .                                (rule 11)
	ListIdent -> Ident . ',' ListIdent                  (rule 12)

	'*'            reduce using rule 11
	','            shift, and enter state 21
	'='            reduce using rule 11
	'bool'         reduce using rule 11
	'func'         reduce using rule 11
	'int'          reduce using rule 11
	'string'       reduce using rule 11


State 10

	Decl -> 'var' ListIdent . Type ';'                  (rule 33)
	Decl -> 'var' ListIdent . '=' ListExpr ';'          (rule 34)
	Decl -> 'var' ListIdent . Type '=' ListExpr ';'     (rule 35)

	'*'            shift, and enter state 15
	'='            shift, and enter state 16
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20

	Type           goto state 14

State 11

	TopDef -> 'func' Ident . '(' ListArg ')' Type Block    (rule 5)
	TopDef -> 'func' Ident . '(' ListArg ')' Block      (rule 6)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 13

	TopDef -> 'func' Ident '(' . ListArg ')' Type Block    (rule 5)
	TopDef -> 'func' Ident '(' . ListArg ')' Block      (rule 6)

	')'            reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Arg            goto state 51
	ListIdent      goto state 52
	ListArg        goto state 53

State 14

	Decl -> 'var' ListIdent Type . ';'                  (rule 33)
	Decl -> 'var' ListIdent Type . '=' ListExpr ';'     (rule 35)

	';'            shift, and enter state 49
	'='            shift, and enter state 50


State 15

	Type -> '*' . Type                                  (rule 41)

	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20

	Type           goto state 48

State 16

	Decl -> 'var' ListIdent '=' . ListExpr ';'          (rule 34)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            reduce using rule 73
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 36

State 17

	Type -> 'bool' .                                    (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'='            reduce using rule 38
	'{'            reduce using rule 38


State 18

	Type -> 'func' . '(' ListType ')' Type              (rule 39)
	Type -> 'func' . '(' ListType ')'                   (rule 40)

	'('            shift, and enter state 23


State 19

	Type -> 'int' .                                     (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'{'            reduce using rule 36


State 20

	Type -> 'string' .                                  (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'='            reduce using rule 37
	'{'            reduce using rule 37


State 21

	ListIdent -> Ident ',' . ListIdent                  (rule 12)

	L_Ident        shift, and enter state 2

	Ident          goto state 9
	ListIdent      goto state 22

State 22

	ListIdent -> Ident ',' ListIdent .                  (rule 12)

	'*'            reduce using rule 12
	'='            reduce using rule 12
	'bool'         reduce using rule 12
	'func'         reduce using rule 12
	'int'          reduce using rule 12
	'string'       reduce using rule 12


State 23

	Type -> 'func' '(' . ListType ')' Type              (rule 39)
	Type -> 'func' '(' . ListType ')'                   (rule 40)

	')'            reduce using rule 42
	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20

	Type           goto state 84
	ListType       goto state 85

State 24

	Expr8 -> Ident . '(' ListExpr ')'                   (rule 45)
	Expr6 -> Ident .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            shift, and enter state 83
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51


State 25

	Expr6 -> Integer .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'{'            reduce using rule 52
	'||'           reduce using rule 52


State 26

	Expr6 -> String .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'{'            reduce using rule 55
	'||'           reduce using rule 55


State 27

	Expr7 -> Expr8 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49


State 28

	Expr6 -> Expr7 . '(' ListExpr ')'                   (rule 50)
	Expr6 -> Expr7 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            shift, and enter state 82
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'{'            reduce using rule 57
	'||'           reduce using rule 57


State 29

	Expr5 -> Expr6 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62


State 30

	Expr4 -> Expr5 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64


State 31

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr4 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            shift, and enter state 79
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 80
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 81
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66

	MulOp          goto state 78

State 32

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr3 .                                    (rule 68)

	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 76
	','            reduce using rule 68
	'-'            shift, and enter state 77
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68

	AddOp          goto state 75

State 33

	Expr2 -> Expr2 . RelOp Expr3                        (rule 67)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 69)
	Expr1 -> Expr2 .                                    (rule 70)

	'!='           shift, and enter state 68
	'&&'           shift, and enter state 69
	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'='            reduce using rule 70
	'=='           shift, and enter state 72
	'>'            shift, and enter state 73
	'>='           shift, and enter state 74
	'{'            reduce using rule 70
	'||'           reduce using rule 70

	RelOp          goto state 67

State 34

	Expr -> Expr1 . '||' Expr                           (rule 71)
	Expr -> Expr1 .                                     (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	'{'            reduce using rule 72
	'||'           shift, and enter state 66


State 35

	ListExpr -> Expr .                                  (rule 74)
	ListExpr -> Expr . ',' ListExpr                     (rule 75)

	')'            reduce using rule 74
	','            shift, and enter state 65
	';'            reduce using rule 74
	'='            reduce using rule 74


State 36

	Decl -> 'var' ListIdent '=' ListExpr . ';'          (rule 34)

	';'            shift, and enter state 64


State 37

	Expr5 -> '!' . Expr6                                (rule 61)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 63

State 38

	Expr5 -> '&' . Expr6                                (rule 58)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 62

State 39

	Expr8 -> '(' . Expr ')'                             (rule 46)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 61

State 40

	Expr5 -> '*' . Expr6                                (rule 59)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 60

State 41

	Expr5 -> '-' . Expr6                                (rule 60)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 59

State 42

	Expr6 -> 'false' .                                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'{'            reduce using rule 54
	'||'           reduce using rule 54


State 43

	Expr7 -> 'func' . '(' ListArg ')' Type Block        (rule 47)
	Expr7 -> 'func' . '(' ListArg ')' Block             (rule 48)

	'('            shift, and enter state 58


State 44

	Expr6 -> 'nil' .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'{'            reduce using rule 56
	'||'           reduce using rule 56


State 45

	Expr6 -> 'true' .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'{'            reduce using rule 53
	'||'           reduce using rule 53


State 46

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2


State 47

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3


State 48

	Type -> '*' Type .                                  (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'='            reduce using rule 41
	'{'            reduce using rule 41


State 49

	Decl -> 'var' ListIdent Type ';' .                  (rule 33)

	'!'            reduce using rule 33
	'&'            reduce using rule 33
	'('            reduce using rule 33
	'*'            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'='            reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'func'         reduce using rule 33
	'if'           reduce using rule 33
	'nil'          reduce using rule 33
	'print'        reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'var'          reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33
	%eof           reduce using rule 33


State 50

	Decl -> 'var' ListIdent Type '=' . ListExpr ';'     (rule 35)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            reduce using rule 73
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 57

State 51

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 56


State 52

	Arg -> ListIdent . Type                             (rule 10)

	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20

	Type           goto state 55

State 53

	TopDef -> 'func' Ident '(' ListArg . ')' Type Block    (rule 5)
	TopDef -> 'func' Ident '(' ListArg . ')' Block      (rule 6)

	')'            shift, and enter state 54


State 54

	TopDef -> 'func' Ident '(' ListArg ')' . Type Block    (rule 5)
	TopDef -> 'func' Ident '(' ListArg ')' . Block      (rule 6)

	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20
	'{'            shift, and enter state 102

	Block          goto state 100
	Type           goto state 101

State 55

	Arg -> ListIdent Type .                             (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 56

	ListArg -> Arg ',' . ListArg                        (rule 15)

	')'            reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Arg            goto state 51
	ListIdent      goto state 52
	ListArg        goto state 99

State 57

	Decl -> 'var' ListIdent Type '=' ListExpr . ';'     (rule 35)

	';'            shift, and enter state 98


State 58

	Expr7 -> 'func' '(' . ListArg ')' Type Block        (rule 47)
	Expr7 -> 'func' '(' . ListArg ')' Block             (rule 48)

	')'            reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Arg            goto state 51
	ListIdent      goto state 52
	ListArg        goto state 97

State 59

	Expr5 -> '-' Expr6 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60


State 60

	Expr5 -> '*' Expr6 .                                (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59


State 61

	Expr8 -> '(' Expr . ')'                             (rule 46)

	')'            shift, and enter state 96


State 62

	Expr5 -> '&' Expr6 .                                (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'{'            reduce using rule 58
	'||'           reduce using rule 58


State 63

	Expr5 -> '!' Expr6 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61


State 64

	Decl -> 'var' ListIdent '=' ListExpr ';' .          (rule 34)

	'!'            reduce using rule 34
	'&'            reduce using rule 34
	'('            reduce using rule 34
	'*'            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'='            reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'func'         reduce using rule 34
	'if'           reduce using rule 34
	'nil'          reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'var'          reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34
	%eof           reduce using rule 34


State 65

	ListExpr -> Expr ',' . ListExpr                     (rule 75)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 73
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            reduce using rule 73
	'='            reduce using rule 73
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 95

State 66

	Expr -> Expr1 '||' . Expr                           (rule 71)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 94

State 67

	Expr2 -> Expr2 RelOp . Expr3                        (rule 67)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 93

State 68

	RelOp -> '!=' .                                     (rule 86)

	'!'            reduce using rule 86
	'&'            reduce using rule 86
	'('            reduce using rule 86
	'*'            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'func'         reduce using rule 86
	'nil'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 69

	Expr1 -> Expr2 '&&' . Expr1                         (rule 69)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 92

State 70

	RelOp -> '<' .                                      (rule 81)

	'!'            reduce using rule 81
	'&'            reduce using rule 81
	'('            reduce using rule 81
	'*'            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'func'         reduce using rule 81
	'nil'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 71

	RelOp -> '<=' .                                     (rule 82)

	'!'            reduce using rule 82
	'&'            reduce using rule 82
	'('            reduce using rule 82
	'*'            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'func'         reduce using rule 82
	'nil'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 72

	RelOp -> '==' .                                     (rule 85)

	'!'            reduce using rule 85
	'&'            reduce using rule 85
	'('            reduce using rule 85
	'*'            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'func'         reduce using rule 85
	'nil'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 73

	RelOp -> '>' .                                      (rule 83)

	'!'            reduce using rule 83
	'&'            reduce using rule 83
	'('            reduce using rule 83
	'*'            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'func'         reduce using rule 83
	'nil'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 74

	RelOp -> '>=' .                                     (rule 84)

	'!'            reduce using rule 84
	'&'            reduce using rule 84
	'('            reduce using rule 84
	'*'            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'func'         reduce using rule 84
	'nil'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 75

	Expr3 -> Expr3 AddOp . Expr4                        (rule 65)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 91

State 76

	AddOp -> '+' .                                      (rule 76)

	'!'            reduce using rule 76
	'&'            reduce using rule 76
	'('            reduce using rule 76
	'*'            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'func'         reduce using rule 76
	'nil'          reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 77

	AddOp -> '-' .                                      (rule 77)

	'!'            reduce using rule 77
	'&'            reduce using rule 77
	'('            reduce using rule 77
	'*'            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'func'         reduce using rule 77
	'nil'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 78

	Expr4 -> Expr4 MulOp . Expr5                        (rule 63)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 90

State 79

	MulOp -> '%' .                                      (rule 80)

	'!'            reduce using rule 80
	'&'            reduce using rule 80
	'('            reduce using rule 80
	'*'            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'func'         reduce using rule 80
	'nil'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 80

	MulOp -> '*' .                                      (rule 78)

	'!'            reduce using rule 78
	'&'            reduce using rule 78
	'('            reduce using rule 78
	'*'            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'func'         reduce using rule 78
	'nil'          reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 81

	MulOp -> '/' .                                      (rule 79)

	'!'            reduce using rule 79
	'&'            reduce using rule 79
	'('            reduce using rule 79
	'*'            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'func'         reduce using rule 79
	'nil'          reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 82

	Expr6 -> Expr7 '(' . ListExpr ')'                   (rule 50)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 73
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 89

State 83

	Expr8 -> Ident '(' . ListExpr ')'                   (rule 45)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 73
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 88

State 84

	ListType -> Type .                                  (rule 43)
	ListType -> Type . ',' ListType                     (rule 44)

	')'            reduce using rule 43
	','            shift, and enter state 87


State 85

	Type -> 'func' '(' ListType . ')' Type              (rule 39)
	Type -> 'func' '(' ListType . ')'                   (rule 40)

	')'            shift, and enter state 86


State 86

	Type -> 'func' '(' ListType ')' . Type              (rule 39)
	Type -> 'func' '(' ListType ')' .                   (rule 40)

	')'            reduce using rule 40
	'*'            shift, and enter state 15
	','            reduce using rule 40
	';'            reduce using rule 40
	'='            reduce using rule 40
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20
	'{'            reduce using rule 40

	Type           goto state 120

State 87

	ListType -> Type ',' . ListType                     (rule 44)

	')'            reduce using rule 42
	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20

	Type           goto state 84
	ListType       goto state 119

State 88

	Expr8 -> Ident '(' ListExpr . ')'                   (rule 45)

	')'            shift, and enter state 118


State 89

	Expr6 -> Expr7 '(' ListExpr . ')'                   (rule 50)

	')'            shift, and enter state 117


State 90

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63


State 91

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 79
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 80
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 81
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 78

State 92

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'='            reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69


State 93

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 76
	','            reduce using rule 67
	'-'            shift, and enter state 77
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 75

State 94

	Expr -> Expr1 '||' Expr .                           (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	'{'            reduce using rule 71


State 95

	ListExpr -> Expr ',' ListExpr .                     (rule 75)

	')'            reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75


State 96

	Expr8 -> '(' Expr ')' .                             (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'{'            reduce using rule 46
	'||'           reduce using rule 46


State 97

	Expr7 -> 'func' '(' ListArg . ')' Type Block        (rule 47)
	Expr7 -> 'func' '(' ListArg . ')' Block             (rule 48)

	')'            shift, and enter state 116


State 98

	Decl -> 'var' ListIdent Type '=' ListExpr ';' .     (rule 35)

	'!'            reduce using rule 35
	'&'            reduce using rule 35
	'('            reduce using rule 35
	'*'            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'func'         reduce using rule 35
	'if'           reduce using rule 35
	'nil'          reduce using rule 35
	'print'        reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'var'          reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35
	%eof           reduce using rule 35


State 99

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15


State 100

	TopDef -> 'func' Ident '(' ListArg ')' Block .      (rule 6)

	'func'         reduce using rule 6
	'var'          reduce using rule 6
	%eof           reduce using rule 6


State 101

	TopDef -> 'func' Ident '(' ListArg ')' Type . Block    (rule 5)

	'{'            shift, and enter state 102

	Block          goto state 115

State 102

	Block -> '{' . ListStmt '}'                         (rule 16)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 110
	'='            reduce using rule 73
	'false'        shift, and enter state 42
	'for'          shift, and enter state 111
	'func'         shift, and enter state 43
	'if'           shift, and enter state 112
	'nil'          shift, and enter state 44
	'print'        shift, and enter state 113
	'return'       shift, and enter state 114
	'true'         shift, and enter state 45
	'var'          shift, and enter state 8
	'{'            shift, and enter state 102
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 103
	Integer        goto state 25
	String         goto state 26
	Block          goto state 104
	ListStmt       goto state 105
	Stmt           goto state 106
	Decl           goto state 107
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 108
	ListExpr       goto state 109

State 103

	Stmt -> Ident . '++' ';'                            (rule 25)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Expr8 -> Ident . '(' ListExpr ')'                   (rule 45)
	Expr6 -> Ident .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            shift, and enter state 83
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           shift, and enter state 133
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           shift, and enter state 134
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51


State 104

	Stmt -> Block .                                     (rule 20)

	'!'            reduce using rule 20
	'&'            reduce using rule 20
	'('            reduce using rule 20
	'*'            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'func'         reduce using rule 20
	'if'           reduce using rule 20
	'nil'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'var'          reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 105

	Block -> '{' ListStmt . '}'                         (rule 16)

	'}'            shift, and enter state 132


State 106

	ListStmt -> Stmt . ListStmt                         (rule 18)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 110
	'='            reduce using rule 73
	'false'        shift, and enter state 42
	'for'          shift, and enter state 111
	'func'         shift, and enter state 43
	'if'           shift, and enter state 112
	'nil'          shift, and enter state 44
	'print'        shift, and enter state 113
	'return'       shift, and enter state 114
	'true'         shift, and enter state 45
	'var'          shift, and enter state 8
	'{'            shift, and enter state 102
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 103
	Integer        goto state 25
	String         goto state 26
	Block          goto state 104
	ListStmt       goto state 131
	Stmt           goto state 106
	Decl           goto state 107
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 108
	ListExpr       goto state 109

State 107

	Stmt -> Decl .                                      (rule 21)

	'!'            reduce using rule 21
	'&'            reduce using rule 21
	'('            reduce using rule 21
	'*'            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'func'         reduce using rule 21
	'if'           reduce using rule 21
	'nil'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'var'          reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 108

	Stmt -> Expr . ';'                                  (rule 32)
	ListExpr -> Expr .                                  (rule 74)
	ListExpr -> Expr . ',' ListExpr                     (rule 75)

	','            shift, and enter state 65
	';'            shift, and enter state 130
	'='            reduce using rule 74


State 109

	Stmt -> ListExpr . '=' ListExpr ';'                 (rule 22)

	'='            shift, and enter state 129


State 110

	Stmt -> ';' .                                       (rule 19)

	'!'            reduce using rule 19
	'&'            reduce using rule 19
	'('            reduce using rule 19
	'*'            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'='            reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'func'         reduce using rule 19
	'if'           reduce using rule 19
	'nil'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'var'          reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 111

	Stmt -> 'for' . Stmt Expr ';' Stmt Block            (rule 23)
	Stmt -> 'for' . Expr Block                          (rule 24)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 110
	'='            reduce using rule 73
	'false'        shift, and enter state 42
	'for'          shift, and enter state 111
	'func'         shift, and enter state 43
	'if'           shift, and enter state 112
	'nil'          shift, and enter state 44
	'print'        shift, and enter state 113
	'return'       shift, and enter state 114
	'true'         shift, and enter state 45
	'var'          shift, and enter state 8
	'{'            shift, and enter state 102
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 103
	Integer        goto state 25
	String         goto state 26
	Block          goto state 104
	Stmt           goto state 127
	Decl           goto state 107
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 128
	ListExpr       goto state 109

State 112

	Stmt -> 'if' . Expr Block                           (rule 29)
	Stmt -> 'if' . Expr Block 'else' Block              (rule 30)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 126

State 113

	Stmt -> 'print' . '(' ListExpr ')' ';'              (rule 31)

	'('            shift, and enter state 125


State 114

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 124
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 123

State 115

	TopDef -> 'func' Ident '(' ListArg ')' Type Block .    (rule 5)

	'func'         reduce using rule 5
	'var'          reduce using rule 5
	%eof           reduce using rule 5


State 116

	Expr7 -> 'func' '(' ListArg ')' . Type Block        (rule 47)
	Expr7 -> 'func' '(' ListArg ')' . Block             (rule 48)

	'*'            shift, and enter state 15
	'bool'         shift, and enter state 17
	'func'         shift, and enter state 18
	'int'          shift, and enter state 19
	'string'       shift, and enter state 20
	'{'            shift, and enter state 102

	Block          goto state 121
	Type           goto state 122

State 117

	Expr6 -> Expr7 '(' ListExpr ')' .                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50


State 118

	Expr8 -> Ident '(' ListExpr ')' .                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'{'            reduce using rule 45
	'||'           reduce using rule 45


State 119

	ListType -> Type ',' ListType .                     (rule 44)

	')'            reduce using rule 44


State 120

	Type -> 'func' '(' ListType ')' Type .              (rule 39)

	')'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'='            reduce using rule 39
	'{'            reduce using rule 39


State 121

	Expr7 -> 'func' '(' ListArg ')' Block .             (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48


State 122

	Expr7 -> 'func' '(' ListArg ')' Type . Block        (rule 47)

	'{'            shift, and enter state 102

	Block          goto state 143

State 123

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 142


State 124

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'&'            reduce using rule 28
	'('            reduce using rule 28
	'*'            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'func'         reduce using rule 28
	'if'           reduce using rule 28
	'nil'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'var'          reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 125

	Stmt -> 'print' '(' . ListExpr ')' ';'              (rule 31)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 73
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 141

State 126

	Stmt -> 'if' Expr . Block                           (rule 29)
	Stmt -> 'if' Expr . Block 'else' Block              (rule 30)

	'{'            shift, and enter state 102

	Block          goto state 140

State 127

	Stmt -> 'for' Stmt . Expr ';' Stmt Block            (rule 23)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 139

State 128

	Stmt -> 'for' Expr . Block                          (rule 24)
	Stmt -> Expr . ';'                                  (rule 32)
	ListExpr -> Expr .                                  (rule 74)
	ListExpr -> Expr . ',' ListExpr                     (rule 75)

	','            shift, and enter state 65
	';'            shift, and enter state 130
	'='            reduce using rule 74
	'{'            shift, and enter state 102

	Block          goto state 138

State 129

	Stmt -> ListExpr '=' . ListExpr ';'                 (rule 22)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            reduce using rule 73
	'false'        shift, and enter state 42
	'func'         shift, and enter state 43
	'nil'          shift, and enter state 44
	'true'         shift, and enter state 45
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35
	ListExpr       goto state 137

State 130

	Stmt -> Expr ';' .                                  (rule 32)

	'!'            reduce using rule 32
	'&'            reduce using rule 32
	'('            reduce using rule 32
	'*'            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'func'         reduce using rule 32
	'if'           reduce using rule 32
	'nil'          reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'var'          reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 131

	ListStmt -> Stmt ListStmt .                         (rule 18)

	'}'            reduce using rule 18


State 132

	Block -> '{' ListStmt '}' .                         (rule 16)

	'!'            reduce using rule 16
	'!='           reduce using rule 16
	'%'            reduce using rule 16
	'&'            reduce using rule 16
	'&&'           reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'func'         reduce using rule 16
	'if'           reduce using rule 16
	'nil'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'var'          reduce using rule 16
	'{'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 133

	Stmt -> Ident '++' . ';'                            (rule 25)

	';'            shift, and enter state 136


State 134

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 135


State 135

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'&'            reduce using rule 26
	'('            reduce using rule 26
	'*'            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'func'         reduce using rule 26
	'if'           reduce using rule 26
	'nil'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 136

	Stmt -> Ident '++' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'&'            reduce using rule 25
	'('            reduce using rule 25
	'*'            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'func'         reduce using rule 25
	'if'           reduce using rule 25
	'nil'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 137

	Stmt -> ListExpr '=' ListExpr . ';'                 (rule 22)

	';'            shift, and enter state 147


State 138

	Stmt -> 'for' Expr Block .                          (rule 24)

	'!'            reduce using rule 24
	'&'            reduce using rule 24
	'('            reduce using rule 24
	'*'            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'func'         reduce using rule 24
	'if'           reduce using rule 24
	'nil'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 139

	Stmt -> 'for' Stmt Expr . ';' Stmt Block            (rule 23)

	';'            shift, and enter state 146


State 140

	Stmt -> 'if' Expr Block .                           (rule 29)
	Stmt -> 'if' Expr Block . 'else' Block              (rule 30)

	'!'            reduce using rule 29
	'&'            reduce using rule 29
	'('            reduce using rule 29
	'*'            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'else'         shift, and enter state 145
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'func'         reduce using rule 29
	'if'           reduce using rule 29
	'nil'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'var'          reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 141

	Stmt -> 'print' '(' ListExpr . ')' ';'              (rule 31)

	')'            shift, and enter state 144


State 142

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'&'            reduce using rule 27
	'('            reduce using rule 27
	'*'            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'func'         reduce using rule 27
	'if'           reduce using rule 27
	'nil'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 143

	Expr7 -> 'func' '(' ListArg ')' Type Block .        (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'{'            reduce using rule 47
	'||'           reduce using rule 47


State 144

	Stmt -> 'print' '(' ListExpr ')' . ';'              (rule 31)

	';'            shift, and enter state 150


State 145

	Stmt -> 'if' Expr Block 'else' . Block              (rule 30)

	'{'            shift, and enter state 102

	Block          goto state 149

State 146

	Stmt -> 'for' Stmt Expr ';' . Stmt Block            (rule 23)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 110
	'='            reduce using rule 73
	'false'        shift, and enter state 42
	'for'          shift, and enter state 111
	'func'         shift, and enter state 43
	'if'           shift, and enter state 112
	'nil'          shift, and enter state 44
	'print'        shift, and enter state 113
	'return'       shift, and enter state 114
	'true'         shift, and enter state 45
	'var'          shift, and enter state 8
	'{'            shift, and enter state 102
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 103
	Integer        goto state 25
	String         goto state 26
	Block          goto state 104
	Stmt           goto state 148
	Decl           goto state 107
	Expr8          goto state 27
	Expr7          goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 108
	ListExpr       goto state 109

State 147

	Stmt -> ListExpr '=' ListExpr ';' .                 (rule 22)

	'!'            reduce using rule 22
	'&'            reduce using rule 22
	'('            reduce using rule 22
	'*'            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'func'         reduce using rule 22
	'if'           reduce using rule 22
	'nil'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 148

	Stmt -> 'for' Stmt Expr ';' Stmt . Block            (rule 23)

	'{'            shift, and enter state 102

	Block          goto state 151

State 149

	Stmt -> 'if' Expr Block 'else' Block .              (rule 30)

	'!'            reduce using rule 30
	'&'            reduce using rule 30
	'('            reduce using rule 30
	'*'            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'func'         reduce using rule 30
	'if'           reduce using rule 30
	'nil'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'var'          reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 150

	Stmt -> 'print' '(' ListExpr ')' ';' .              (rule 31)

	'!'            reduce using rule 31
	'&'            reduce using rule 31
	'('            reduce using rule 31
	'*'            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'='            reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'func'         reduce using rule 31
	'if'           reduce using rule 31
	'nil'          reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'var'          reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 151

	Stmt -> 'for' Stmt Expr ';' Stmt Block .            (rule 23)

	'!'            reduce using rule 23
	'&'            reduce using rule 23
	'('            reduce using rule 23
	'*'            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'='            reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'func'         reduce using rule 23
	'if'           reduce using rule 23
	'nil'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 40
Number of non-terminals: 29
Number of states: 152
